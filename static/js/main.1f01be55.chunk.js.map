{"version":3,"sources":["Components/FinalTax.js","Components/Date.js","Components/Land.js","Components/Picker.js","App.js","serviceWorker.js","index.js","Components/styles.module.css"],"names":["FinalTax","props","useState","yeartax","setYeartax","monthTax","setMonthTax","totalTax","setTotalTax","payableTax","useContext","LandContext","Numberofdays","days","MonthTax","PayableTax","MonthTaxCalc","toFixed","YearTax","YearTaxCalc","TotalTax","Math","floor","numberWithCommas","x","toString","replace","displayIntrest","Penalty","displayTax","className","classes","yearTax","Button","variant","btn","type","onClick","alert","TaxHandler","style","marginLeft","final","box","DateSelect","Date","date","setDate","payDate","setPayDate","NumberOfDays","allotmentDate","Days","getTime","NumberOfDaysCalc","initalAllotmentDate","getFullYear","getMonth","allotmentDateCalc","DateContainer","allotContainer","allot","selected","onChange","marginTop","toDateString","payContainer","pay","createContext","Land","minecat","Category","area","setArea","taxable","setTaxable","Pay","setPay","taxableLand","max","tax","Payable","finalTax","Provider","value","cat","Form","width","Group","controlId","Label","Control","placeholder","event","target","Text","buttonContainer","preventDefault","Tax","result","Picker","category","setCategory","mine","setMine","cont","mobile","fontSize","as","display","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.1f01be55.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { LandContext } from \"./Land\";\r\nimport classes from \"./styles.module.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nconst FinalTax = (props) => {\r\n  const [yeartax, setYeartax] = useState(0);\r\n  const [monthTax, setMonthTax] = useState(0);\r\n  const [totalTax, setTotalTax] = useState(0);\r\n  const { payableTax } = useContext(LandContext);\r\n  const Numberofdays = props.days;\r\n\r\n  const YearTaxCalc = (PayableTax, Numberofdays) => {\r\n    const dayIntrest = PayableTax * (12 / 100) * 1;\r\n    const Final = (Numberofdays / 365) * dayIntrest;\r\n\r\n    return Final;\r\n  };\r\n  const MonthTaxCalc = (PayableTax, Numberofdays) => {\r\n    const dayIntrest = PayableTax * (12 / 100) * 1;\r\n    const Final = (dayIntrest / 30) * Numberofdays;\r\n    return Final;\r\n  };\r\n\r\n  const MonthTax = MonthTaxCalc(payableTax, Numberofdays).toFixed();\r\n  const YearTax = YearTaxCalc(payableTax, Numberofdays).toFixed();\r\n  const TotalTax = Math.floor(MonthTax) + Math.floor(YearTax) + payableTax;\r\n\r\n  const TaxHandler = (payableTax) => {\r\n    if (payableTax === 0) {\r\n      alert(\"please calculate payable tax first\");\r\n    } else {\r\n      setYeartax(YearTax);\r\n      setMonthTax(MonthTax);\r\n      setTotalTax(TotalTax);\r\n    }\r\n  };\r\n  const clearTaxHandler = () => {\r\n    setYeartax(0);\r\n    setMonthTax(0);\r\n    setTotalTax(0);\r\n  };\r\n\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  const displayIntrest = numberWithCommas(yeartax);\r\n  const Penalty = numberWithCommas(monthTax);\r\n  const displayTax = numberWithCommas(totalTax);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.yearTax}>\r\n        <Button\r\n          variant=\"success\"\r\n          className={classes.btn}\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            TaxHandler(payableTax);\r\n          }}\r\n        >\r\n          Calculate Total Tax\r\n        </Button>\r\n        <div style={{ marginLeft: 10 }}>\r\n          <Button\r\n            type=\"clear\"\r\n            className={classes.btn}\r\n            onClick={clearTaxHandler}\r\n          >\r\n            clear\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className={classes.final}>\r\n        <div className={classes.box}>\r\n          <div>\r\n            <h3>interest: {displayIntrest} ₹</h3>\r\n            <h3>Penalty: {Penalty} ₹</h3>\r\n            <h3>Total : {displayTax} ₹</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        © 2020 Copyright: Kalph upadhyay\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalTax;\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport FinalTax from \"./FinalTax\";\r\nimport classes from \"./styles.module.css\";\r\n\r\nconst DateSelect = (props) => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [payDate, setPayDate] = useState(new Date());\r\n\r\n  const dateChangeHandler = (date) => {\r\n    setDate(date);\r\n  };\r\n  const payChangeHandler = (date) => {\r\n    setPayDate(date);\r\n  };\r\n\r\n  const initalAllotmentDate = new Date(1590992147138);\r\n\r\n  const allotmentDateCalc = (initalAllotmentDate, date) => {\r\n    if (date < initalAllotmentDate) {\r\n      return initalAllotmentDate;\r\n    } else if (date > initalAllotmentDate) {\r\n      const lastDay = new Date(date.getFullYear(), date.getMonth() + 2, 0);\r\n      return lastDay;\r\n    }\r\n  };\r\n  const allotmentDate = allotmentDateCalc(initalAllotmentDate, date);\r\n\r\n  const NumberOfDaysCalc = (payDate, allotmentDate) => {\r\n    if (payDate < allotmentDate) {\r\n      return 0;\r\n    } else if (payDate > allotmentDate) {\r\n      var Difference_In_Time = payDate.getTime() - allotmentDate.getTime();\r\n      const Days = Difference_In_Time / (1000 * 3600 * 24) - 1;\r\n      if (Days < 60) return 0;\r\n      if (Days > 60) return Days - 60;\r\n    }\r\n  };\r\n  const NumberOfDays = NumberOfDaysCalc(payDate, allotmentDate);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.DateContainer}>\r\n        <div className={classes.allotContainer}>\r\n          <h3>Enter Allotment Date</h3>\r\n          <div className={classes.allot}>\r\n            <DatePicker selected={date} onChange={dateChangeHandler} />\r\n          </div>\r\n          <div style={{ marginTop: 10 }}>\r\n            {date ? date.toDateString() : null}\r\n          </div>\r\n        </div>\r\n        <div className={classes.payContainer}>\r\n          <h3>Enter Payment Date </h3>\r\n          <div className={classes.pay}>\r\n            <DatePicker selected={payDate} onChange={payChangeHandler} />\r\n          </div>\r\n          <div style={{ marginTop: 10 }}>\r\n            {payDate ? payDate.toDateString() : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <FinalTax days={NumberOfDays} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateSelect;\r\n","import React, { useState, createContext } from \"react\";\r\nimport classes from \"./styles.module.css\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Date from \"./Date\";\r\n\r\nexport const LandContext = createContext();\r\n\r\nconst Land = (props) => {\r\n  const minecat = props.minecat;\r\n  const Category = props.Category;\r\n  const [area, setArea] = useState(\"\");\r\n  const [taxable, setTaxable] = useState(0);\r\n  const [Pay, setPay] = useState(0);\r\n  const inputHandler = (event) => {\r\n    setArea(event.target.value);\r\n  };\r\n\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n  const taxableLand = Math.max(0, area - 10000);\r\n\r\n  const tax = numberWithCommas(taxableLand);\r\n\r\n  const Payable = (Category, taxableLand, minecat) => {\r\n    if (Category === \"industrial\") {\r\n      return taxableLand * 2;\r\n    } else if (Category === \"commercial\") {\r\n      return taxableLand * 3;\r\n    } else if (minecat === \"lead\") {\r\n      return taxableLand * 15;\r\n    } else if (minecat === \"copper\") {\r\n      return taxableLand * 15;\r\n    } else if (minecat === \"rock\") {\r\n      return taxableLand * 210;\r\n    } else if (minecat === \"cement\") {\r\n      return taxableLand * 6;\r\n    } else if (minecat === \"major\") {\r\n      return taxableLand * 3;\r\n    } else if (minecat === \"dolomite\") {\r\n      return taxableLand * 2;\r\n    } else if (minecat === \"minor\") {\r\n      return taxableLand * 0.2;\r\n    } else if (minecat === \"\" || Category === \"\") {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const payableTax = numberWithCommas(Payable(Category, taxableLand, minecat));\r\n  const finalTax = Payable(Category, taxableLand, minecat);\r\n\r\n  const CalculateHandler = (event) => {\r\n    if (area === \"\") {\r\n      alert(\"please enter area of land\");\r\n    } else if (area < 10000) {\r\n      alert(\"no tax\");\r\n    } else {\r\n      setTaxable(tax);\r\n      setPay(payableTax);\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  const clearHandler = (event) => {\r\n    setTaxable(0);\r\n    setPay(0);\r\n    setArea(\"\");\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <LandContext.Provider value={{ payableTax: finalTax }}>\r\n      <div>\r\n        <div className={classes.cat}>\r\n          <Form style={{ width: \"40%\" }}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Area of your Land</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"sq.ft\"\r\n                value={area}\r\n                onChange={inputHandler}\r\n              />\r\n              <Form.Text className=\" font-italic \">\r\n                Value entered is in square feet\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <div className={classes.buttonContainer}>\r\n              <Button\r\n                variant=\"success\"\r\n                className={classes.btn}\r\n                type=\"submit\"\r\n                onClick={CalculateHandler}\r\n              >\r\n                Calculate Pay Tax\r\n              </Button>\r\n\r\n              <Button variant=\"primary\" type=\"submit\" onClick={clearHandler}>\r\n                Clear\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n\r\n        <div className={classes.Tax}>\r\n          <h3>Taxable Land:</h3>\r\n          <h3 style={{ marginLeft: 5 }}>\r\n            <span className={classes.result}>{taxable}</span> sq.ft\r\n          </h3>\r\n        </div>\r\n        <div className={classes.Tax}>\r\n          <h3>Payable Tax:</h3>\r\n          <h3 style={{ marginLeft: 5 }}>\r\n            <span className={classes.result}>{Pay}</span> ₹\r\n          </h3>\r\n        </div>\r\n\r\n        <Date />\r\n      </div>\r\n    </LandContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Land;\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport classes from \"./styles.module.css\";\r\nimport Land from \"./Land\";\r\nconst Picker = () => {\r\n  const [category, setCategory] = useState(\"industrial\");\r\n  const [mine, setMine] = useState(\"\");\r\n\r\n  const HandleCat = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n  const Handlemine = (event) => {\r\n    setMine(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.cont}>\r\n      <div className={classes.cat}>\r\n        <Form className={classes.mobile}>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n            <Form.Label style={{ fontSize: 18, width: \"100%\" }}>\r\n              Select category of Land\r\n            </Form.Label>\r\n            <Form.Control as=\"select\" value={category} onChange={HandleCat}>\r\n              <option value=\"industrial\">Industrial</option>\r\n              <option value=\"commercial\">Commercial</option>\r\n              <option value=\"mining\">Mining</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n      <div\r\n        style={\r\n          category === \"mining\" ? { display: \"flex\" } : { display: \"none\" }\r\n        }\r\n        className={classes.mine}\r\n      >\r\n        <Form className={classes.mobile}>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n            <Form.Label>Select category of Land</Form.Label>\r\n            <Form.Control as=\"select\" value={mine} onChange={Handlemine}>\r\n              <option value=\"\">Select class</option>\r\n              <option value=\"lead\">Lead zinc bearing land</option>\r\n              <option value=\"copper\">copper bearing land</option>\r\n              <option value=\"rock\">Rock phosphatic bearing Lands</option>\r\n              <option value=\"cement\">\r\n                Cement and sms grade limestone bearing land\r\n              </option>\r\n              <option value=\"major\">Other major mineral bearing land</option>\r\n              <option value=\"dolomite\">\r\n                Dolomite,felspar,fuller earth(other than cement & SMS grade\r\n                Limestone)\r\n              </option>\r\n              <option value=\"minor\">Other minor mineral bearing land</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n      <Land Category={category} minecat={mine} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Picker;\r\n","import React from \"react\";\nimport \"./index.css\";\nimport Picker from \"./Components/Picker\";\nconst App = (props) => {\n  return (\n    <section className=\"background\">\n      <div className=\"container-lg \" style={{ marginTop: 20 }}>\n        <h1 className=\"title\">Rajasthan land tax calculator</h1>\n        <Picker />\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"styles_cont__34Og5\",\"cat\":\"styles_cat__WKhBS\",\"mine\":\"styles_mine__eZwKM\",\"buttonContainer\":\"styles_buttonContainer__-sWuc\",\"Tax\":\"styles_Tax__2uXSD\",\"result\":\"styles_result__hHVGj\",\"mobile\":\"styles_mobile__1XUY9\",\"DateContainer\":\"styles_DateContainer__1WH-z\",\"allotContainer\":\"styles_allotContainer__3TxSZ\",\"allot\":\"styles_allot__3XhXU\",\"payContainer\":\"styles_payContainer__3cZcX\",\"pay\":\"styles_pay__1a8oi\",\"final\":\"styles_final__IiZX3\",\"box\":\"styles_box__2PMhe\",\"yearTax\":\"styles_yearTax__-hx38\",\"btn\":\"styles_btn__2RouK\"};"],"sourceRoot":""}